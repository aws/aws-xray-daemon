name: Continuous Build and Publish
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'

      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build archives and test
        run: make build test
        env:
          VERSION: ${{ github.sha }}
      
      - name: Build linux archives
        if: ${{ runner.os == 'Linux' }}
        run: make packaging
        env:
          VERSION: ${{ github.sha }}
      
      - name: Upload archives as actions artifact
        if: ${{ runner.os == 'Linux' }}
        uses: actions/upload-artifact@v2
        with:
          name: distributions
          path: build/dist/

      - name: Configure AWS Credentials
        if: ${{ runner.os == 'Linux' && github.event_name == 'push' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Public ECR
        if: ${{ runner.os == 'Linux' && github.event_name == 'push' }}
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws

      - name: Login to DockerHub
        if: ${{ runner.os == 'Linux' && github.event_name == 'push' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Set up Docker Buildx
        if: ${{ runner.os == 'Linux' }}
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build docker image
        if: ${{ runner.os == 'Linux' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          platforms: linux/amd64,linux/arm64
          tags: |
            amazon/aws-xray-daemon:alpha
            public.ecr.aws/xray/aws-xray-daemon:alpha
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
